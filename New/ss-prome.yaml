apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  labels: &Labels
    k8s-app: prometheus
    app.kubernetes.io/name: "prometheus-service"
    app.kubernetes.io/component: prometheus
spec:
  serviceName: "prometheus-service"
  replicas: 1
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      serviceAccountName: prometheus 
      initContainers:
      - name: "init-chown-data"
        image: prom/prometheus:v2.19.2
        securityContext:
          runAsUser: 0
        imagePullPolicy: Always
        command: ["chown", "-R", "65534:65534", "/data"]
        volumeMounts:
        - name: prom-pv-appliance
          mountPath: /data
          subPath: ""
      containers:
        - name: prometheus-server
          image: prom/prometheus:v2.19.2 
          imagePullPolicy: "IfNotPresent"
          args:
            - "--config.file=/etc/config/prometheus.yml"
            - "--storage.tsdb.path=/data"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          # based on 10 running nodes with 30 pods each
          resources:
            requests:
              cpu: 200m
              memory: 1000Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: prom-pv-appliance
              mountPath: /data
              subPath: ""
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: promet-configmap
        - name: prom-pv-appliance
          persistentVolumeClaim:
            claimName: p2
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - prometheus
            topologyKey: "kubernetes.io/hostname"
